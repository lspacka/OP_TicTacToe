Players == obj
GameBoard == ?
GameState == obj

- the ultimate challenge (apart from AI ofc) would be to keep both the console and the graphic games.
  that is, every move on the graphic board is reflected on the console. 
  I can see a way to do this now, maybe I could encapsulate the thing on one ConsoleMirror()...

LOOP:
  1. prompt the player
  2. check for winner and a move already in place
  3. check next play
  4. if (winner) escape loop, show the winner. reset game
  5. else, place play on board. go back to 1

DOM:
  + add each play to array
  + stop playing when prompted - propagation bug?
  + fix add2 bug
  + fix keyboard event listener bug
  + the fix for the keys bug only works in the first round. fix
  - (last edge case) fix weird bug where, if the very last move forms a winning line, 
    the banner shows a draw, but the console shows the correct msg

CONSOLE: 
  + keep track of the current play ('X' or 'O')
  + before each play GameState prompts the player
    + validate input (row, col) with regex
  + on each play GameState pushes the play to the board array inside GameBoard
    + extract row and col from the input string
    + put the current play on the board array
  + after each play GameState calls GameBoard factory(?) and shows (returns) the (current) board
  + have checkWin() exclude all the '-' 

  + restart game without reloading the page
  + check if theres a move in place 
  + check for draw

AI:
  priorities:
    1st is to win
    2nd is to prevent rival from winning
    if rival is close to winning (how to determine?) then 2nd becomes 1st